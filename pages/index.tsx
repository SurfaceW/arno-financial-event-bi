import 'reflect-metadata';

import { IBaseResponseModel, IPaginationModel } from '@/biz/base/model';
import { BIEventController } from '@/biz/bi-events/controller';
import { IBIEventModel } from '@/biz/bi-events/model';
import { convertDataToPropertyMap } from '@/biz/common/notion-helper';
import { WorldBankDataFetchController } from '@/biz/data/wb/controller';
import { convertToChartData } from '@/biz/data/wb/helper';
import { RequestCacheController } from '@/biz/request-cache/controller';
import { Chart } from '@antv/g2';
import Head from 'next/head';
import { Logger } from 'pino';
import { useEffect, useRef } from 'react';
import { find } from 'lodash';

import { DBManager } from '../modules/db/db-manager';
import { diContainer } from '../modules/di';
import styles from '../styles/Home.module.css';

import type { NextPage } from 'next';
export async function getServerSideProps(context: any) {
  const db = diContainer.get<DBManager>('DB');
  const logger = diContainer.get<Logger>('Logger');
  const reqCacheController = diContainer.get<RequestCacheController>('req.cache.controller');
  const wbDataController = diContainer.get<WorldBankDataFetchController>('wb.data.controller');
  const biEventsController = diContainer.get<BIEventController>('events.controller');
  await db.connect();
  // const res = await reqCacheController.getRequestCacheByQueryParams('testQuery');
  // logger.info('current response', res);
  const res = await wbDataController.getGDPViaNationCode('CN');
  const events = await biEventsController.getEventListAll();
  return {
    props: {
      gdpData: convertToChartData(res as any)  || null,
      eventData: events?.results.map(i => convertDataToPropertyMap(i as PageObjectResponse)) as any,
    }, // will be passed to the page component as props
  }
}

const Home: NextPage<{
  gdpData: Array<{
    date: string,
    value: number,
    unit: string,
  }>;
  eventData: IBIEventModel[];
}> = ({ gdpData, eventData  }) => {
  const chartRef = useRef<Chart>();

  useEffect(() => {
    if (!chartRef?.current) {
      const chart = new Chart({
        container: 'g2-plot',
        autoFit: true,
        width: 2000,
        height: 500,
        padding: [30, 20, 70, 30],
      });
      chartRef.current = chart;
      console.log('chart data:', 'gdp:', gdpData, 'event', eventData);
      chart.data(gdpData.reverse());
      chart.scale({
        value: {
          min: Math.min(...gdpData.map(i => i.value)),
          max: 100,
        },
      });
      chart.axis('value', false);
      chart.legend({
        custom: true,
        items: [
          {
            name: '中国 GDP',
            value: 'value',
            marker: { symbol: 'line', style: { stroke: '#1890ff', lineWidth: 2 } },
          },
        ],
      });
      chart.line().position('date*value').color('#1890ff');
      // chart.line().position('date*nlp').color('#2fc25b');
      eventData.forEach((event) => {
        const fullYear = String(new Date(event.startTime).getFullYear());
        const value = find(gdpData, { date: fullYear })?.value || 0;
        // chart.annotation().dataMarker({
        //   top: true,
        //   position: {
        //     date: fullYear,
        //     value:  find(gdpData, { date: fullYear })?.value || 0,
        //   },
        //   text: {
        //     content: event.name,
        //     style: {
        //       textAlign: 'left',
        //     }
        //   },
        //   line: {
        //     length: 30,
        //   }
        // });
        chart.annotation().line({
          text: {
            content: event.name,
            style: {
              textAlign: 'left'
            }
          },
          top: true,
          start: [fullYear, value],
          end: [String(+fullYear + 1), value],
        });
      });
      chart.removeInteraction('legend-filter'); // 自定义图例，移除默认的分类图例筛选交互
      chart.render();
    }
  }, [chartRef, gdpData, eventData]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Arno FIN. Events BI</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>
          GDP MacroEvents Analysis
        </h1>
        <div id="g2-plot"></div>
      </main>
      <footer className={styles.footer}>
        Arno Fin. BI.
      </footer>
    </div>
  );
};

export default Home;
